-- TABLE FULL SCAN Hint 예시
EXPLAIN PLAN FOR 
SELECT /*+ FULL(A) */
       A.*
FROM SYSTEM.STUDENT A
WHERE SNO <= '930000';

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- INDEX SCAN Hint 예시
EXPLAIN PLAN FOR 
SELECT /*+ INDEX(A STUDENT_SNO_PK) */
       A.*
FROM SYSTEM.STUDENT A
WHERE SNO <= '930000';

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- USE_NL Hint 예시
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A B) USE_NL(B) */
       A.SNO,
       A.SNAME,
       B.CNO,
       B.RESULT
FROM SYSTEM.STUDENT A,
     SYSTEM.SCORE B
WHERE A.SNO = B.SNO;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- FULL Hint & USE_NL Hint 예시
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A B) USE_NL(B) FULL(A) FULL(B) */
       A.SNO,
       A.SNAME,
       B.CNO,
       B.RESULT
FROM SYSTEM.STUDENT A,
     SYSTEM.SCORE B
WHERE A.SNO = B.SNO;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- 네 개 테이블 Join 예시(NL JOIN 두 번 & SORT MERGE JOIN 한 번)
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A C B D) USE_NL(C) USE_NL(B) USE_MERGE(D) INDEX(A STUDENT_SNO_PK) INDEX(B COURSE_CNO_PK) */
       A.SNAME,
       B.CNAME,
       C.RESULT,
       D.GRADE
FROM SYSTEM.STUDENT A,
     SYSTEM.COURSE B,
     SYSTEM.SCORE C,
     SYSTEM.SCGRADE D
WHERE A.SNO = C.SNO
      AND B.CNO = C.CNO
      AND C.RESULT <= D.HISCORE
      AND C.RESULT >= D.LOSCORE
      AND A.SNO <= '930000';

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- USE_HASH Hint 예시
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A B) USE_HASH(B) */
       A.SNO,
       A.SNAME,
       B.CNO,
       B.RESULT
FROM SYSTEM.STUDENT A,
     SYSTEM.SCORE B
WHERE A.SNO = B.SNO;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- INDEX Hint & USE_HASH Hint 예시
EXPLAIN PLAN FOR 
SELECT /*+ LEADING(A B) USE_HASH(B) INDEX(A STUDENT_SNO_PK) */
       A.SNO,
       A.SNAME,
       B.CNO,
       B.RESULT
FROM SYSTEM.STUDENT A,
     SYSTEM.SCORE B
WHERE A.SNO = B.SNO
      AND A.SNO <= '930000';
      
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY); 

-- INLINE VIEW에 대한 NO_MERGE Hint 예시
EXPLAIN PLAN FOR 
SELECT SNAME,
       SUM(A_CNT) AS A_CNT,
       SUM(B_CNT) AS B_CNT,
       SUM(C_CNT) AS C_CNT,
       SUM(D_CNT) AS D_CNT,
       SUM(F_CNT) AS F_CNT
FROM (
    SELECT /*+ NO_MERGE */
           SNAME,
           CASE WHEN GRADE = 'A' THEN CNT ELSE 0 END AS A_CNT,
           CASE WHEN GRADE = 'B' THEN CNT ELSE 0 END AS B_CNT,
           CASE WHEN GRADE = 'C' THEN CNT ELSE 0 END AS C_CNT,
           CASE WHEN GRADE = 'D' THEN CNT ELSE 0 END AS D_CNT,
           CASE WHEN GRADE = 'F' THEN CNT ELSE 0 END AS F_CNT
    FROM (
        SELECT /*+ NO_MERGE */
               A.SNAME,
               D.GRADE,
               COUNT(*) AS CNT
        FROM SYSTEM.STUDENT A,
             SYSTEM.COURSE B,
             SYSTEM.SCORE C,
             SYSTEM.SCGRADE D
        WHERE A.SNO = C.SNO
              AND B.CNO = C.CNO
              AND C.RESULT <= D.HISCORE
              AND C.RESULT >= D.LOSCORE
              AND A.SNO IN ('944503', '925602')
        GROUP BY A.SNAME, D.GRADE
    )
)
GROUP BY SNAME;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);   


TMP_PIVOT_TABLE AS (
    SELECT SNAME,
           CASE WHEN GRADE = 'A' THEN CNT ELSE 0 END AS A_CNT,
           CASE WHEN GRADE = 'B' THEN CNT ELSE 0 END AS B_CNT,
           CASE WHEN GRADE = 'C' THEN CNT ELSE 0 END AS C_CNT,
           CASE WHEN GRADE = 'D' THEN CNT ELSE 0 END AS D_CNT,
           CASE WHEN GRADE = 'F' THEN CNT ELSE 0 END AS F_CNT
    FROM COUNT_BY_STDNT_N_GRADE
)

SELECT SNAME,
       SUM(A_CNT) AS A_CNT,
       SUM(B_CNT) AS B_CNT,
       SUM(C_CNT) AS C_CNT,
       SUM(D_CNT) AS D_CNT,
       SUM(F_CNT) AS F_CNT
FROM TMP_PIVOT_TABLE
GROUP BY SNAME;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);   
